// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Action /> renders 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <_class
    actions={Array []}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <ForwardRef
          active={false}
          onClick={[Function]}
        />,
        <ForwardRef>
          <ForwardRef
            active={false}
            count={1}
          >
            <ForwardRef />
          </ForwardRef>
        </ForwardRef>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "active": false,
          "children": undefined,
          "onClick": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bwzfXH",
            "isStatic": false,
            "rules": Array [
              "
  position: relative;
  ",
              "
color: #dadada;
margin: 0;
padding: 0;
background: transparent;
border: none;
font-family: 'EB Garamond', serif;
font-size: 1rem;
cursor: pointer;
text-decoration: underline solid rgba(90,90,90,0.75);
user-select: none;
-webkit-tap-highlight-color: transparent;

:focus {
  outline: none;
}
",
              "
  ",
              [Function],
              "
  display: flex;
  flex-flow: column nowrap;
  align-items: center;
",
            ],
          },
          "displayName": "styled.button",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bwzfXH",
          "target": "button",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <ForwardRef
            active={false}
            count={1}
          >
            <ForwardRef />
          </ForwardRef>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "active": false,
            "children": Array [
              <ForwardRef />,
              Array [],
            ],
            "count": 1,
          },
          "ref": Object {
            "current": null,
          },
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": undefined,
              },
              "ref": null,
              "rendered": null,
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bxivhb",
                  "isStatic": true,
                  "rules": Array [
                    "
  font-style: italic;
  position: absolute;
  font-size: 0.9rem;
  text-decoration: none;
  transition: transform 0.2s ease-in;
  left: 0;
  top: 30px;
  width: 100vw;

  @media ",
                    "all and (orientation: landscape)",
                    " {
    font-size: 0.9rem;
  }
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bxivhb",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
          ],
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-ifAKCX",
              "isStatic": false,
              "rules": Array [
                "
  display: flex;
  flex-flow: column nowrap;
  align-items: center;
  align-self: center;
  position: absolute;
  top: 0;
  width: 100px;
  opacity: ",
                [Function],
                ";
  visibility: ",
                [Function],
                ";
  border-radius: 50%;
  transition: opacity 0.2s ease-in, visibility 0.2s ease-in, transform 0.2s ease-in;
  ",
                [Function],
                "
  ",
                [Function],
                "
",
              ],
            },
            "displayName": "styled.nav",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-ifAKCX",
            "target": "nav",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-htpNat",
            "isStatic": true,
            "rules": Array [
              "
  display: flex;
  flex-flow: column nowrap;
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-htpNat",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
    ],
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-bdVaJa",
        "isStatic": true,
        "rules": Array [
          "
  position: relative;
  display: flex;
  flex-flow: column nowrap;
  align-items: center;
",
        ],
      },
      "displayName": "styled.div",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-bdVaJa",
      "target": "div",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <ForwardRef
            active={false}
            onClick={[Function]}
          />,
          <ForwardRef>
            <ForwardRef
              active={false}
              count={1}
            >
              <ForwardRef />
            </ForwardRef>
          </ForwardRef>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "active": false,
            "children": undefined,
            "onClick": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-bwzfXH",
              "isStatic": false,
              "rules": Array [
                "
  position: relative;
  ",
                "
color: #dadada;
margin: 0;
padding: 0;
background: transparent;
border: none;
font-family: 'EB Garamond', serif;
font-size: 1rem;
cursor: pointer;
text-decoration: underline solid rgba(90,90,90,0.75);
user-select: none;
-webkit-tap-highlight-color: transparent;

:focus {
  outline: none;
}
",
                "
  ",
                [Function],
                "
  display: flex;
  flex-flow: column nowrap;
  align-items: center;
",
              ],
            },
            "displayName": "styled.button",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-bwzfXH",
            "target": "button",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <ForwardRef
              active={false}
              count={1}
            >
              <ForwardRef />
            </ForwardRef>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "active": false,
              "children": Array [
                <ForwardRef />,
                Array [],
              ],
              "count": 1,
            },
            "ref": Object {
              "current": null,
            },
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": undefined,
                },
                "ref": null,
                "rendered": null,
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-bxivhb",
                    "isStatic": true,
                    "rules": Array [
                      "
  font-style: italic;
  position: absolute;
  font-size: 0.9rem;
  text-decoration: none;
  transition: transform 0.2s ease-in;
  left: 0;
  top: 30px;
  width: 100vw;

  @media ",
                      "all and (orientation: landscape)",
                      " {
    font-size: 0.9rem;
  }
",
                    ],
                  },
                  "displayName": "styled.div",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-bxivhb",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                },
              },
            ],
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-ifAKCX",
                "isStatic": false,
                "rules": Array [
                  "
  display: flex;
  flex-flow: column nowrap;
  align-items: center;
  align-self: center;
  position: absolute;
  top: 0;
  width: 100px;
  opacity: ",
                  [Function],
                  ";
  visibility: ",
                  [Function],
                  ";
  border-radius: 50%;
  transition: opacity 0.2s ease-in, visibility 0.2s ease-in, transform 0.2s ease-in;
  ",
                  [Function],
                  "
  ",
                  [Function],
                  "
",
                ],
              },
              "displayName": "styled.nav",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-ifAKCX",
              "target": "nav",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            },
          },
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-htpNat",
              "isStatic": true,
              "rules": Array [
                "
  display: flex;
  flex-flow: column nowrap;
",
              ],
            },
            "displayName": "styled.div",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-htpNat",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
      ],
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-bdVaJa",
          "isStatic": true,
          "rules": Array [
            "
  position: relative;
  display: flex;
  flex-flow: column nowrap;
  align-items: center;
",
          ],
        },
        "displayName": "styled.div",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "sc-bdVaJa",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
